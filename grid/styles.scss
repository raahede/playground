@import "breakpoint";
@import "grid";
@import "settings";

/**
 * General settings
 */

body {
  font-size: $base-font-size;
  margin: 2em 0;
  padding: 0;
}

/**
 * All media queries
 */

@each $name, $values in $breakpoints {
  .#{$name} {
    @include breakpoint($name) {
      content: "#{$name}";
    }
  }
}

/**
 * Grid container
 * ---
 * Element for setting max-width on layout
 */

.container {
  @include container;
}

.container--no-gutter {
  @extend .container;
  @include gutter;
}

/**
 * Grid row splitter
 * ---
 * Element for securing that floated element's won't clash
 * when they differ in height
 */

%splitter {
  border: none;
  display: none;
  margin: 0;
  @include span;
}

.splitter--large {
  @extend %splitter;
  @include breakpoint(large) {
    display: block;
  }
}

/**
 * Grid columns
 * ---
 * Setting widths on elements on different breakpoints
 */

.column--small {
  @include span(1);

  @include breakpoint(small) {
    @include span(1/2);
  }

  @include breakpoint(large) {
    @include span(1/4);
  }
}

.column--large {
  @include span(1);

  @include breakpoint(large) {
    @include span(1/2);
  }
}

/**
 * Column layouts / styles
 * ---
 * Showcasing different element styles
 */

//
// Element with gutter
//

.column--has-gutter {
  margin-bottom: gutter() * 2;
  @include gutter;
}

//
// Element without gutter
//

.column--no-gutter {
  background-color: #D5EAF0;
  margin-bottom: gutter() * 2;

  img { width: 100%; }

  p {
    margin: gutter();
  }
}


//
// Element with border and inside gutter
//

// Wrapping element with border to the left for wrapping columns
// with border - this avoids double border between columns
.border-wrapper {
  border-left: 1px solid #ccc;
  @include clearfix;
}

// Element with border
// Negative margin is set to avoid vertical double borders
.column--border {
  border: 1px solid #ccc;
  border-left: none;
  margin-top: -1px;
  padding: gutter();
  @include gutter;

  @include breakpoint(large) {
    min-height: 344px;
  }

  img { width: 100%; }
}
